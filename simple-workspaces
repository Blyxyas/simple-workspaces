#!/bin/bash

# Script made by Alex G. C aka Blyxyas visit github.com/blyxyas for more information

# This script is the main script!
# It is used to run the main program.

# arguments:

# Workspaces:
ws(){
    # ID is a number, it is used to identify the workspace.
    # Commands is an array of Commands to be executed

    Commands=()
    obj_properties=("$1" Commands)

    ws.addcommand(){
        Commands[${#$1[@]}]="$3"
    }

    ws.removecommand(){
        if [ "$2" == "=" ]; then
            # We remove a command from the workspace.
            for ((i=0; i < ${#Commands[@]}; i++)); do 
                if [ "${Commands[i]}" == "$3" ]; then
                    unset "Commands[i]"
                fi
            done
        fi
    }

    ws.list(){
        echo -e "\033[1m<=======Commands of Workspace:=======>\033[0m"
    }

    ws.loadws(){
        # We load the workspace.
        for ((i=0; i < ${#Commands[@]};i++)); do
            eval "${Commands[i]}"
        done
    }
}

filename="/home/alex/git/simpleworkspaces/workspaces"
workspaces=()

while read -r line; do
    # reading workspace file

    # If the line is a comment or empty, then skip it.
    if [ "${line:0:1}" = "#" ] || [ -z "$line" ]; then
        continue
    else
        if [ "${line:0:1}" = "@" ]; then
            # The line is a workspace.
            # We need to create the workspace.    
            
            ws workspace "${line:1:1}"

            # We get the ID of the workspace
            
            workspaces[${#workspaces[@]}]=workspace

            # We get the Commands of the workspace
            # now we read the following lines, until we find the end of the workspace.
        
        else
            # The line is a command.
            # We add the command to the workspace.
            workspace.addcommand "${line:0:1}" "${line:1}"
        fi
    fi

done < $filename

panic(){
    echo -e "\033[31mERROR: Workspace not found!\033[0m"
    exit 1
}

findws(){
    for ((i=0; i < ${#workspaces[@]};i++)); do
        if [ "${workspaces[$i]}" == "$1" ]; then
            return "${i}"
        fi
    done
    panic
}

save(){
    # We save the workspaces.
    echo -e "\033[1m<=======Saving Workspaces:=======>\033[0m"
    for ((i=0; i < ${#workspaces[@]};i++)); do
        workspace="${workspaces[$i]}"
        echo "$workspace" | sudo tee $filename
    done
}

# Main CLI program:

if [ "$1" = "list" ]; then
    # We list the workspaces.
    echo -e "\033[1m<=======Workspaces=======>\033[0m"
    for ((i=0; i < ${#workspaces[@]};i++)); do
        echo "${workspaces[$i]}"
        ${workspaces[i]}.list
    done

elif [ "$1" = "load" ]; then
    # We load the workspace.
    idx=findws "$2"
    "${workspaces[idx]}".loadws

elif [ "$1" = "remove" ]; then
    # We remove a workspace
    idx=findws "$2"
    unset 'workspaces[$idx]'
    save

elif [ "$1" == "add" ]; then
    # We create a workspace
    workspaces[${#workspaces[@]}]="$2"
    save

elif [ "$1" == "addcommand" ]; then
    # We add a command to a workspace
    idx=findws "$2"
    "${workspaces[idx]}".addcommand "$3"
    save

elif [ "$1" == "removecommand" ]; then
    # We remove a command from a workspace
    idx=findws "$2"
    "${workspaces[idx]}".removecommand "$3"
    save

elif [ "$1" == "uninstall" ]; then
    read -r -p "Are you sure you want to uninstall simple-workspaces? (y/n) " yn
    case $yn in
        [Yy]* )
            sudo rm -rf "${BINPATH}"
            echo -e "\033[1m<=======Uninstalled=======>\033[0m"
            ;;
        [Nn]* )
            echo -e "\033[1m<=======Aborted=======>\033[0m"
            ;;
        * )
            echo -e "\033[1m<=======Aborted=======>\033[0m"
            ;;
        esac
fi
